import tensorflow as tf
from PIL import Image #이미지 분석 및 처리 Pillow 라이브러리
import numpy as np
import matplotlib.pyplot as plt
#TensorFlow Hub는 재사용 가능한 머신러닝을 위한 개방형 리포지토리 및 라이브러리
import tensorflow_hub as hub
import functools
import os

#load image
def load_image(image_path):
  image = tf.io.read_file(image_path)
  image = tf.image.decode_image(image, channels=3)
  image = tf.image.convert_image_dtype(image, tf.float32)
  image = tf.image.resize(image, (256,256))
  #tr.newaxis를 이용한 reshape방법. 맨 앞에 shape 1이 추가 (원래 image(256,256,3))=>(1,256,256,3)
  image = image[tf.newaxis,:]
  #print(image) 
  return image

def tensor2image(image):
  image = image*255.0
  image = np.array(image, dtype=np.uint8)
  return Image.fromarray(image)

content_image = load_image('/content/gdrive/My Drive/content1.png')
style_image = load_image('/content/gdrive/My Drive/style1.jpg')

hub_module = hub.load('https://tfhub.dev/google/magenta/arbitrary-image-stylization-v1-256/2')
stylized_image = hub_module(tf.constant(content_image), tf.constant(style_image))[0][0]
#stylized_image = outputs[0][0]

final_image = tensor2image(stylized_image)
if final_image.mode != 'RGB':
    final_image = final_image.convert('RGB')
final_image.save('/content/gdrive/My Drive/stylized_image1.jpg')
