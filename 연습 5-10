# 바퀴와 날개의 유무에 따라, '배','자동차','비행기'로 분류하는 신경망 모델
# 신경망은 3개의 다층 레이어로 구성
import tensorflow as tf
import numpy as np
import os
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# [바퀴, 날개]
x_data = np.array(
    [[0, 0], [1, 0], [1, 1], [0, 0], [0, 0], [0, 1]])
y_data = np.array([
    [1, 0, 0],  # 배
    [0, 1, 0],  # 자동차
    [0, 0, 1],  # 비행기
    [1, 0, 0],  # 배
    [1, 0, 0],  # 배
    [0, 0, 1]   # 비행기
])
model = tf.keras.Sequential()
model.add(Dense(input_dim=2, units=10, activation='relu'))
model.add(Dense(units=5, activation='relu'))
# 3개의 출력 유닛을 가진 소프트맥스 층을 추가
model.add(Dense(units=3, activation='softmax')) 

model.compile(optimizer=tf.optimizers.Adam(learning_rate=0.01), loss='categorical_crossentropy', metrics=['accuracy'])
model.summary()

checkpoint_path = "/content/gdrive/My Drive/Colab Notebooks/cp.ckpt"
checkpoint_dir = os.path.dirname(checkpoint_path)
# 체크포인트 콜백 만들기
cp_callback = tf.keras.callbacks.ModelCheckpoint(checkpoint_path,
                                                 save_weights_only=True,
                                                 verbose=1)
history = model.fit(x_data, y_data, epochs=100, batch_size=1, callbacks = [cp_callback])  # 훈련 단계에 콜백을 전달한다

print("=============weights==========")
for weight in model.weights: 
  print(weight)

print("=============test results==========\n")
print(x_data)
print(model.predict(x_data))
print("\n Accuracy: %.4f" % (model.evaluate(x_data, y_data)[1])) #list index
print("===================================")
