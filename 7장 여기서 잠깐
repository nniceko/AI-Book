from keras.models import Sequential, Model
from keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, LSTM, Input, Activation, Reshape, concatenate
from keras import optimizers
import tensorflow as tf
import numpy as np
import matplotlib.pylab as plt
from tensorflow.keras.datasets.cifar10 import load_data
from tensorflow.keras.utils import to_categorical
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import SimpleRNN, Dense, Flatten
from tensorflow.keras.optimizers import Adam

# MNIST 데이터셋을 로드하여 준비
(train_images, train_labels), (test_images, test_labels) = load_data()

# shape of train_image & test_image : (batch_size, image_height, image_width)
# Input data of RNN : (batch_size, timesteps, input_dim)
# 픽셀값 0~1로 정규화
train_images = train_images.reshape((50000,32,32,3))
test_images = test_images.reshape((10000,32,32,3))
train_images, test_images = train_images / 255.0, test_images / 255.0
# 데이터 레이블 one hot 코드 변경
one_hot_train_labels = to_categorical(train_labels, 10)
one_hot_test_labels = to_categorical(test_labels, 10)

model = Sequential()

#model.add(Conv2D(input_shape = (32, 32, 3), filters = 50, kernel_size = (3,3), strides = (1,1), padding = 'same'))
model.add(tf.keras.layers.Conv2D(32, (3, 3), activation='relu', strides=(1, 1), input_shape=(32, 32, 3)))
#model.add(Activation('relu'))
model.add(tf.keras.layers.MaxPooling2D((2, 2)))
model.add(tf.keras.layers.Conv2D(16, (3, 3), activation='relu'))

model.add(Reshape(target_shape = (13*13, 16)))
model.add(LSTM(30, input_shape = (13*13, 16), return_sequences = False))
model.add(Dense(10, activation='softmax'))
model.compile(optimizer=Adam(learning_rate=0.001), 
              loss='categorical_crossentropy', metrics=['accuracy'])

model.summary()
history = model.fit(train_images, one_hot_train_labels, epochs=5, batch_size=32)
print("\n=============test results==========")
labels=model.predict(test_images)
print("\n Accuracy: %.4f" % (model.evaluate(test_images, 
                                            one_hot_test_labels)[1])) 
print("===================================")
